@using BookingShared.ViewModels
@model BookingShared.ViewModels.HotelWithRoomsViewModel
@{
    ViewData["Title"] = Model.Hotel.Name;
}

<div class="text-center">
    <h2 class="display-4">Hotels</h2>
</div>

<div class="modal fade" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <partial name="_BookingForm.cshtml" model="new RoomBookingViewModel() { BeginDate = DateTime.Today, EndDate = DateTime.Today.AddDays(1), Rooms = Model.Rooms.ToList() }">
        </div>
    </div>
</div>

<div class="container py-5">
    <div class="row">
        <div class="col-lg-11 mx-auto">
            <div class="row rounded border shadow p-3">
                <div class="col col-8">
                    <div class="d-flex justify-content-between mt-1">
                        <h3 class="mt-0 font-weight-bold mb-2">@Model.Hotel.Name</h3>
                        <div class="small" id="stars">
                            @for (int i = 1; i <= 5; i++)
                            {
                                @if (i < Model.Hotel.Stars)
                                {
                                    <i class="fa fa-star text-warning"></i>
                                }
                                else
                                {
                                    <i class="fa fa-star-o text-gray"></i>
                                }
                            }
                        </div>
                    </div>
                    <p class="font-italic text-muted mb-0">
                        @if (Model.HotelDetails != null)
                        {
                            @Model.HotelDetails.FullDescription
                        }
                        else
                        {
                            @Model.Hotel.DescriptionShort
                        }
                    </p>
                    <br />
                    <p class="font-italic text-muted mb-0" id="hotelAddress">
                        Address: @Model.Hotel.City @Model.Hotel.Address
                        @* TODO: MapPartialView - https://stackoverflow.com/questions/40787998/proper-way-to-include-google-maps-in-net-core *@
                    </p>
                </div>
                <div class="col col-4">
                    <img src="~/img/riviera.jpg" alt="" class="img-thumbnail">
                </div>
                <div class="col col-md-6 mx-auto">
                    <style>
                        #map {
                            margin: 0;
                            padding: 0;
                            height: 400px;
                            max-width: none;
                        }
                        #map img {
                            max-width: none !important;
                        }
                    </style>
                    <div id="map"></div>

                    <script>
                        var map;

                        function initMap() {
                            var geocoder = new google.maps.Geocoder();
                            geocoder.geocode({ address: "@Model.Hotel.Address" }, function (results, status) {
                                if (status == google.maps.GeocoderStatus.OK) {
                                    map = new google.maps.Map(document.getElementById('map'), {
                                        center: results[0].geometry.location,
                                        zoom: 17
                                    });
                                }
                            });
                        }
                    </script>
                    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCEYdNt_gRDBDGGmD-h8e_KpC3McLTG5qE&callback=initMap" async defer></script>
                </div>
                <div class="row p-2" id="roomsList">
                    <div class="col col-12">
                        <hr />
                        <h5>Available Rooms</h5>
                    </div>
                    @* TODO: Replace with real rooms *@
                    @foreach (var room in Model.Rooms)
                    {
                        <div class="col-md-3">
                            <div class="card m-0 mt-3 p-1">
                                <div class="card-title text-center small">
                                    <strong>@room.RoomNumber</strong>
                                </div>
                                <img class="card-img mb-sm-2" src="~/img/room.jpg" />
                                <div class="card-text small text-center">
                                    @room.Description
                                </div>
                                <button type="button" class="btn" data-toggle="modal" data-target="#myModal">
                                    Book it $@room.Price
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
